{
  "stats": {
    "suites": 7,
    "tests": 11,
    "passes": 10,
    "pending": 1,
    "failures": 0,
    "start": "2023-02-17T15:48:52.274Z",
    "end": "2023-02-17T15:48:54.945Z",
    "duration": 2671,
    "testsRegistered": 11,
    "passPercent": 100,
    "pendingPercent": 9.090909090909092,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8c278a3d-91ba-4b95-98bc-2445ebe78768",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Handle with errror message : should create a new user with createdAt date in the correct format",
          "fullTitle": "Handle with errror message : should create a new user with createdAt date in the correct format",
          "timedOut": false,
          "duration": 340,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "try {\n        const randomName = faker.name.fullName();\n        const randomJobTitle = faker.name.jobTitle();\n        const response = await axios.post('https://reqres.in/api/users', {\n            \"name\": randomName,\n            \"job\": randomJobTitle\n        });\n        const user = response.data;\n        const createdAt = new Date(user.createdAt);\n        const now = new Date();\n        expect(createdAt.toDateString()).to.equal('Thu Feb 18 2023');\n    } catch (error) {\n        console.log(\"Date is incorrect format: \" + error);\n      }",
          "err": {},
          "uuid": "d5c3e6ac-53d6-40eb-a9ce-afc2091227b8",
          "parentUUID": "8c278a3d-91ba-4b95-98bc-2445ebe78768",
          "isHook": false,
          "skipped": false
        },
        {
          "title": "Should extract user Id ",
          "fullTitle": "Should extract user Id ",
          "timedOut": false,
          "duration": 294,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const randomName = faker.name.fullName();\n            const randomJobTitle = faker.name.jobTitle();\n            const res = await axios.post('https://reqres.in/api/users',\n                {\n                     \"name\": randomName,\n                    \"job\": randomJobTitle\n                \n                });\n            console.log(res.data);\n            console.log(res.status);\n      \n   \n            expect(res.data).to.haveOwnProperty(\"id\");\n            expect(res.status).to.equal(201);\n            expect(res.data.id).to.be.a('string');\n            const userId = res.data.id\n            expect(userId).to.not.be.empty;\n            console.log(userId);",
          "err": {},
          "uuid": "bb084531-469f-47d8-9743-c8e1b1e6f751",
          "parentUUID": "8c278a3d-91ba-4b95-98bc-2445ebe78768",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [
        {
          "uuid": "f5118af1-cfd5-44bb-bd81-5c1b22884641",
          "title": "Base URL from Property File Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/baseUrl_from_property.js",
          "file": "/api-tests/baseUrl_from_property.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able get baseUrl from property file",
              "fullTitle": "Base URL from Property File Tests should be able get baseUrl from property file",
              "timedOut": false,
              "duration": 72,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(properties.get(\"baseUrl\"));\nconst res = await axios.get(properties.get(\"baseUrl\") + '/users');\nconsole.log(res.data);\nexpect(res.status).equal(200);\nexpect(res.data.page).equal(1);\nexpect(res.data.per_page).equal(6);",
              "err": {},
              "uuid": "84f95500-2578-49eb-bc9b-625b3490e589",
              "parentUUID": "f5118af1-cfd5-44bb-bd81-5c1b22884641",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84f95500-2578-49eb-bc9b-625b3490e589"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 72,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6d7987f1-af7a-4a46-b515-8f134a45389c",
          "title": "DELETE API Request Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/delete_request.js",
          "file": "/api-tests/delete_request.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DELETE API Request Tests\"",
              "fullTitle": "DELETE API Request Tests \"before all\" hook in \"DELETE API Request Tests\"",
              "timedOut": false,
              "duration": 73,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Get a list of users sorted by creation date\nconst res = await axios.get('https://reqres.in/api/users?page=2');\nconst responseArray = res.data.data;\nlastUserId = responseArray[responseArray.length - 1].id;\nconsole.log(lastUserId);",
              "err": {},
              "uuid": "32c0c597-f7a6-44d2-89d8-90f4cf4f2763",
              "parentUUID": "6d7987f1-af7a-4a46-b515-8f134a45389c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should delete the last user",
              "fullTitle": "DELETE API Request Tests should delete the last user",
              "timedOut": false,
              "duration": 307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.delete('https://reqres.in/api/users/${lastUserId}');\nexpect(res.status).to.equal(204);",
              "err": {},
              "uuid": "715d4496-bfc3-49bf-ac64-7dfb2a93ec90",
              "parentUUID": "6d7987f1-af7a-4a46-b515-8f134a45389c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "715d4496-bfc3-49bf-ac64-7dfb2a93ec90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 307,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7d93a383-0089-4791-9c96-d53b23f6f800",
          "title": "GET API Request Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/get_request.js",
          "file": "/api-tests/get_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able get user list",
              "fullTitle": "GET API Request Tests should be able get user list",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get('https://reqres.in/api/users?page=2');\nconsole.log(res.data);\nexpect(res.data.page).equal(2);\nexpect(res.data.per_page).equal(6);",
              "err": {},
              "uuid": "6275ad64-8996-4480-a85e-15ee96bd81d8",
              "parentUUID": "7d93a383-0089-4791-9c96-d53b23f6f800",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6275ad64-8996-4480-a85e-15ee96bd81d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ed056809-4d62-4f34-b59f-19818520b1af",
          "title": "PATCH API Request Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/patch_request.js",
          "file": "/api-tests/patch_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able update only name without job title",
              "fullTitle": "PATCH API Request Tests should be able update only name without job title",
              "timedOut": false,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.name.fullName();\n//const randomJobTitle = faker.name.jobTitle();\nconst res = await axios.patch('https://reqres.in/api/users/737',\n    {\n        \"name\": randomName\n    }\n).then(res => res.data)\nconsole.log(res);\nexpect(res.name).equal(randomName);",
              "err": {},
              "uuid": "a2c42394-eb95-49ed-831b-227e8cfa5450",
              "parentUUID": "ed056809-4d62-4f34-b59f-19818520b1af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have property updatedAt",
              "fullTitle": "PATCH API Request Tests should have property updatedAt",
              "timedOut": false,
              "duration": 334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.name.fullName();\nconst res = await axios.patch('https://reqres.in/api/users/737',\n    {\n        \"name\": randomName\n    }\n).then(res => res.data)\nconsole.log(res);\nexpect(res.name).equal(randomName);\n       \n\nexpect(res).to.haveOwnProperty(\"updatedAt\");",
              "err": {},
              "uuid": "4fee1210-c21d-46c9-b687-88110fc40e55",
              "parentUUID": "ed056809-4d62-4f34-b59f-19818520b1af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2c42394-eb95-49ed-831b-227e8cfa5450",
            "4fee1210-c21d-46c9-b687-88110fc40e55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 631,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5d423885-e509-405a-9c58-bc308c5a7d67",
          "title": "POST API Request Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/post_request.js",
          "file": "/api-tests/post_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able post a user daetails",
              "fullTitle": "POST API Request Tests should be able post a user daetails",
              "timedOut": false,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.name.fullName();\nconst randomJobTitle = faker.name.jobTitle();\nconst res = await axios.post('https://reqres.in/api/users',\n    {\n         \"name\": randomName,\n        \"job\": randomJobTitle\n    \n    });\nconsole.log(res.data);\nconsole.log(res.status);\nexpect(res.data.name).equal(randomName);\nexpect(res.data.job).equal(randomJobTitle);\nexpect(res.status).to.equal(201);",
              "err": {},
              "uuid": "a17692b5-4f6e-4134-b53f-6219d6e94876",
              "parentUUID": "5d423885-e509-405a-9c58-bc308c5a7d67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a new user with createdAt date in the correct format",
              "fullTitle": "POST API Request Tests should create a new user with createdAt date in the correct format",
              "timedOut": false,
              "duration": 293,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.name.fullName();\nconst randomJobTitle = faker.name.jobTitle();\nconst response = await axios.post('https://reqres.in/api/users', {\n    \"name\": randomName,\n    \"job\": randomJobTitle\n});\nconst user = response.data;\nexpect(user.createdAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/);",
              "err": {},
              "uuid": "e2cbc2dc-32df-4b1c-a803-8d175f4d0159",
              "parentUUID": "5d423885-e509-405a-9c58-bc308c5a7d67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a17692b5-4f6e-4134-b53f-6219d6e94876",
            "e2cbc2dc-32df-4b1c-a803-8d175f4d0159"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 589,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8d018d3d-a572-4325-9d26-855f9cb01c25",
          "title": "PUT API Request Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/put_request.js",
          "file": "/api-tests/put_request.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able update a user",
              "fullTitle": "PUT API Request Tests should be able update a user",
              "timedOut": false,
              "duration": 289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const randomName = faker.name.fullName();\nconst randomJobTitle = faker.name.jobTitle();\nconst res = await axios.put('https://reqres.in/api/users/737',\n    {\n        \"name\": randomName,\n        \"job\": randomJobTitle\n    }\n).then(res => res.data)\nconsole.log(res);\nexpect(res.name).equal(randomName);\n expect(res.job).equal(randomJobTitle);",
              "err": {},
              "uuid": "6ff9451e-e768-4058-bfe7-abec4345c788",
              "parentUUID": "8d018d3d-a572-4325-9d26-855f9cb01c25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ff9451e-e768-4058-bfe7-abec4345c788"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 289,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "26b42258-17c4-49cf-bb89-62f414bf4f01",
          "title": "Write Data Tests",
          "fullFile": "/Users/annamay/Documents/GitHub/api-testing-axios-mocha-chai-javascript/api-tests/write_data_to_json.js",
          "file": "/api-tests/write_data_to_json.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able write data to JSON",
              "fullTitle": "Write Data Tests should be able write data to JSON",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "f4ec4835-d4ad-4053-a7a0-2e22bd30fdbf",
              "parentUUID": "26b42258-17c4-49cf-bb89-62f414bf4f01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "f4ec4835-d4ad-4053-a7a0-2e22bd30fdbf"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [
        "d5c3e6ac-53d6-40eb-a9ce-afc2091227b8",
        "bb084531-469f-47d8-9743-c8e1b1e6f751"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 634,
      "root": true,
      "rootEmpty": false,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}